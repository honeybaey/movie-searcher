{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","services/MovieService.js","components/MovieCard/MovieCard.js","components/MovieList/MovieList.js","components/About/About.js","components/ErrorIndicator/ErrorIndicator.js","App.js","index.js"],"names":["Header","className","Search","state","query","onEnterName","e","setState","target","value","onSubmit","preventDefault","props","onSearchPerson","this","type","placeholder","onChange","Component","MovieService","_apiKey","_baseURL","url","fetch","res","ok","Error","status","json","id","getResource","results","MovieCard","title","img","src","alt","MovieList","films","map","item","key","About","ErrorIndicator","App","movieService","isLoaded","error","onError","err","searchPerson","getPerson","then","person","film","known_for","filmsArr","forEach","push","poster_path","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wYAWeA,G,MARA,WACb,OACE,4BAAQC,UAAU,UAChB,kDCHeC,G,wDACnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,MAAO,IAGT,EAAKC,YAAc,SAACC,GAClB,EAAKC,SAAS,CACZH,MAAOE,EAAEE,OAAOC,SAIpB,EAAKC,SAAW,SAACJ,GACfA,EAAEK,iBACF,EAAKC,MAAMC,eAAe,EAAKV,MAAMC,OACrC,EAAKG,SAAS,CACZH,MAAO,MAjBC,E,qDAuBZ,OACE,0BAAMH,UAAU,cAAcS,SAAUI,KAAKJ,UAC3C,2BACEK,KAAK,OACLd,UAAU,qBACVe,YAAY,wFACZC,SAAUH,KAAKT,YACfI,MAAOK,KAAKX,MAAMC,a,GA/BQc,c,uBCHfC,E,iDACnBC,QAAU,mC,KACVC,S,gIAEkBC,G,uFACEC,MAAM,GAAD,OAAIT,KAAKO,UAAT,OAAoBC,I,WAArCE,E,QAEGC,G,sBACD,IAAIC,MAAJ,yBAA4BJ,EAA5B,sBAA6CE,EAAIG,S,uBAG5CH,EAAII,O,sNAGLC,G,uFACMf,KAAKgB,YAAL,iBAA2BD,EAA3B,oBAAyCf,KAAKM,QAA9C,oB,cAAZI,E,yBACCA,G,gLAGOpB,G,uFACIU,KAAKgB,YAAL,iCAA2ChB,KAAKM,QAAhD,iCAAgFhB,I,cAA5FoB,E,yBACCA,EAAIO,S,8GCNAC,G,MAXG,SAACpB,GAAW,IACpBqB,EAAerB,EAAfqB,MAAOC,EAAQtB,EAARsB,IAEf,OACE,yBAAKjC,UAAU,cACb,yBAAKkC,IAAG,yCAAoCD,GAAOE,IAAKH,IACxD,uBAAGhC,UAAU,qBAAqBgC,MCKzBI,G,MAVG,SAACzB,GACjB,OACE,yBAAKX,UAAU,cACZW,EAAM0B,MAAMC,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAKP,OAAWO,UCIzBE,G,MAVD,WACZ,OACE,yBAAKzC,UAAU,SACb,mdCQS0C,G,MAVQ,WACrB,OACE,yBAAK1C,UAAU,mBACb,qDACA,gIACA,uNCDe2C,E,kDAGnB,aAAe,IAAD,8BACZ,gBAHFC,aAAe,IAAI1B,EAKjB,EAAKhB,MAAQ,CACXmC,MAAO,GACPQ,UAAU,EACVC,OAAO,GAGT,EAAKC,QAAU,SAACC,GACd,EAAK1C,SAAS,CACZwC,OAAO,KAIX,EAAKG,aAAe,SAAC9C,GACnB,EAAKyC,aACFM,UAAU/C,GACVgD,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAO,GAAGE,UACnBC,EAAW,GACfF,EAAKG,SAAQ,SAACjB,GACZgB,EAASE,KAAK,CAAEzB,MAAOO,EAAKP,MAAOC,IAAKM,EAAKmB,iBAE/C,EAAKpD,SAAS,CACZ+B,MAAOkB,EACPV,UAAU,OAGbc,MAAM,EAAKZ,UA7BJ,E,qDAiCJ,IAAD,EAC4BlC,KAAKX,MAAhC2C,EADD,EACCA,SAAUR,EADX,EACWA,MAAOS,EADlB,EACkBA,MACzB,OACE,6BACE,kBAAC,EAAD,MAEGA,EAMC,kBAAC,EAAD,MALA,yBAAK9C,UAAU,aACb,kBAAC,EAAD,CAAQY,eAAgBC,KAAKoC,eAC3BJ,EAAuB,KAAZ,kBAAC,EAAD,MACb,kBAAC,EAAD,CAAWR,MAAOA,U,GA9CCpB,aCFjC2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0fb16529.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div>Movie Searcher</div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./Search.scss\";\n\nexport default class Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      query: \"\",\n    };\n\n    this.onEnterName = (e) => {\n      this.setState({\n        query: e.target.value,\n      });\n    };\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n      this.props.onSearchPerson(this.state.query);\n      this.setState({\n        query: \"\",\n      });\n    };\n  }\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          className=\"search-form__input\"\n          placeholder=\"Введите фамилию\"\n          onChange={this.onEnterName}\n          value={this.state.query}\n        />\n      </form>\n    );\n  }\n}\n","export default class MovieService {\n  _apiKey = \"9000047236c3b4a86957e392cead86b6\";\n  _baseURL = `https://api.themoviedb.org/3`;\n\n  async getResource(url) {\n    const res = await fetch(`${this._baseURL}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Couldn't fetch ${url}, received ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  async getFilm(id) {\n    const res = await this.getResource(`/movie/${id}?api_key=${this._apiKey}&language=ru-RU`);\n    return res;\n  }\n\n  async getPerson(query) {\n    const res = await this.getResource(`/search/person?api_key=${this._apiKey}&language=ru-RU&query=${query}`);\n    return res.results;\n  }\n}","import React from \"react\";\n\nimport \"./MovieCard.scss\";\n\nconst MovieCard = (props) => {\n  const { title, img } = props;\n\n  return (\n    <div className=\"movie-card\">\n      <img src={`https://image.tmdb.org/t/p/w200${img}`} alt={title} />\n      <p className=\"movie-card__title\">{title}</p>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport MovieCard from \"../MovieCard/MovieCard\";\n\nimport \"./MovieList.scss\";\n\nconst MovieList = (props) => {\n  return (\n    <div className=\"movie-list\">\n      {props.films.map((item) => (\n        <MovieCard key={item.title} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\nimport \"./About.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <p>\n        Сервис показывает топ-3 фильма, благодаря которым стал популярен актер или режиссер\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react'\n\nimport './ErrorIndicator.scss'\n\nconst ErrorIndicator = () => {\n  return (\n    <div className='error-indicator'>\n      <span>Упс!</span>\n      <span>Что-то пошло не так</span>\n      <span>Попробуй написать фамилию еще раз</span>\n    </div>\n  )\n}\n\nexport default ErrorIndicator\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport MovieService from \"./services/MovieService\";\nimport MovieList from \"./components/MovieList/MovieList\";\nimport About from \"./components/About/About\";\nimport ErrorIndicator from \"./components/ErrorIndicator/ErrorIndicator\";\n\nexport default class App extends Component {\n  movieService = new MovieService();\n\n  constructor() {\n    super();\n\n    this.state = {\n      films: [],\n      isLoaded: false,\n      error: false,\n    };\n\n    this.onError = (err) => {\n      this.setState({\n        error: true,\n      });\n    };\n\n    this.searchPerson = (query) => {\n      this.movieService\n        .getPerson(query)\n        .then((person) => {\n          const film = person[0].known_for;\n          let filmsArr = [];\n          film.forEach((item) => {\n            filmsArr.push({ title: item.title, img: item.poster_path });\n          });\n          this.setState({\n            films: filmsArr,\n            isLoaded: true,\n          });\n        })\n        .catch(this.onError);\n    };\n  }\n\n  render() {\n    const { isLoaded, films, error } = this.state;\n    return (\n      <div>\n        <Header />\n        {\n          !error \n          ? <div className=\"container\">\n              <Search onSearchPerson={this.searchPerson} />\n              {!isLoaded ? <About /> : null}\n              <MovieList films={films} />\n            </div>\n          : <ErrorIndicator />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './App.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}